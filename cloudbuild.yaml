# See https://contains.dev/blog/mastering-docker-cache
steps:
# Export
- name: 'gcr.io/cloud-builders/gcloud'
  id: export
  entrypoint: 'bash'
  args: 
  - -ceux
  - |
    export BUILD_IMAGE="gcr.io/$PROJECT_ID/expert-dollup"
    export BUILD_CACHE_TAGS=$(gcloud container images list-tags $$BUILD_IMAGE --filter="'build'" --quiet --format=json | sed 's/ *$//g')
    export TEST_CACHE_TAGS=$(gcloud container images list-tags $$BUILD_IMAGE --filter="'test'" --quiet --format=json | sed 's/ *$//g')
    
    if [ -z "$BRANCH_NAME" ]; then
      export BUILD_BRANCH_NAME="main"
    else
      export BUILD_BRANCH_NAME="$BRANCH_NAME"
    fi

    if [ -z "$COMMIT_SHA" ]; then
      export BUILD_TAG="$BUILD_ID"
    else
      export BUILD_TAG="$COMMIT_SHA"
    fi

    env | grep "^BUILD_" > /workspace/build_vars
 # Build cache
- name: 'gcr.io/cloud-builders/docker'
  id: build_cache
  entrypoint: 'bash'
  args: 
  - -ceux
  - |
    source /workspace/build_vars

    if [ "$$BUILD_CACHE_TAGS" == "[]" ]; then
      docker build --target=build -t $$BUILD_IMAGE:build --build-arg BUILDKIT_INLINE_CACHE=1 .
      docker image push $$BUILD_IMAGE:build
    else 
      docker pull $$BUILD_IMAGE:build
      docker build --target=build -t $$BUILD_IMAGE:build --build-arg BUILDKIT_INLINE_CACHE=1 --cache-from $$BUILD_IMAGE:build . 
    fi
  env:
  - 'DOCKER_BUILDKIT=1'
 # Test
- name: 'gcr.io/cloud-builders/docker'
  id: test
  entrypoint: 'bash'
  args: 
  - -ceux
  - |
    source /workspace/build_vars

    if [ "$$TEST_CACHE_TAGS" == "[]" ]; then
      docker build --target=build -t $$BUILD_IMAGE:test --build-arg BUILDKIT_INLINE_CACHE=1 .
    else 
      docker pull $$BUILD_IMAGE:test
      docker build --target=test -t $$BUILD_IMAGE:test --build-arg BUILDKIT_INLINE_CACHE=1 --cache-from $$BUILD_IMAGE:test . 
    fi
    
    docker image push $$BUILD_IMAGE:test
    docker run $$BUILD_IMAGE:test
  env:
  - 'DOCKER_BUILDKIT=1'

 # Build
- name: 'gcr.io/cloud-builders/docker'
  id: build
  entrypoint: 'bash'
  args: 
  - -ceux
  - |
    source /workspace/build_vars
    docker pull -q $$BUILD_IMAGE:build
    docker build --target=release -t $$BUILD_IMAGE:$$BUILD_TAG --cache-from $$BUILD_IMAGE:build . 
    docker push $$BUILD_IMAGE:$$BUILD_TAG
  env:
  - 'DOCKER_BUILDKIT=1'

# Deploy
- name: gcr.io/cloud-builders/docker
  id: deploy
  entrypoint: bash
  args:
  - -ceux
  - |
    source /workspace/build_vars
    if [ "$$BUILD_BRANCH_NAME" != "main" ]; then exit 0; fi

    docker pull $$BUILD_IMAGE:$$BUILD_TAG
    docker tag $$BUILD_IMAGE:$$BUILD_TAG $$BUILD_IMAGE:latest
    docker image push $$BUILD_IMAGE:latest

 # TODO: Trigger pulumi
logsBucket: 'gs://predykt-v2_cloudbuild'
options:
  logging: GCS_ONLY